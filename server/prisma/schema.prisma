// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Cart {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  productId String   @db.ObjectId
  email     String
  shoeSize  Int
  quantity  Int
  product   Product  @relation(fields: [productId], references: [id])
  mainuser  Mainuser @relation(fields: [email], references: [email])

  @@unique([productId, email])
}

model Design {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  description String
  image       String?
  product     Product[]
}

model Designer {
  email         String   @id @map("_id")
  description   String?
  portfolioLink String
  mainuser      Mainuser @relation(fields: [email], references: [email])
}

model Mainuser {
  email      String    @id @map("_id")
  name       String
  profilepic String?
  passwd     String
  street     String
  city       String
  state      String
  pincode    Int
  cart       Cart[]
  designer   Designer?
  orders     Orders[]
  retailer   Retailer?
  wishlist   Wishlist[]
}

model Wishlist {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  userId    String
  productId String   @db.ObjectId
  product   Product  @relation(fields: [productId], references: [id])
  user      Mainuser @relation(fields: [userId], references: [email])

  @@unique([userId, productId])
}

model Orders {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  orderId   String   @db.ObjectId
  productId String   @db.ObjectId
  email     String
  shoeSize  Int
  quantity  Int
  orderTime DateTime @default(now())
  product   Product  @relation(fields: [productId], references: [id])
  mainuser  Mainuser @relation(fields: [email], references: [email])

  @@unique([orderId, productId])
  @@index([email])
}

model Product {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  shoeId      String?   @db.ObjectId
  designId    String?   @db.ObjectId
  category    String    @default("pre-designed")
  productImage String?
  cart        Cart[]
  orders      Orders[]
  wishlist    Wishlist[]
  design      Design?   @relation(fields: [designId], references: [id])
  shoe        Shoe?     @relation(fields: [shoeId], references: [id])
}

model Retailer {
  email            String   @id @map("_id")
  shopName         String
  contactNumber    Int
  shopaddressLine1 String?
  shopCity         String?
  shopPincode      Int?
  mainuser         Mainuser @relation(fields: [email], references: [email])
}

model Shoe {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  shoename    String
  supplierId  String    @db.ObjectId
  price       Float
  shoeImage   String?
  product     Product[]
  supplier    Supplier  @relation(fields: [supplierId], references: [id])
}

model Supplier {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  supplierName String
  location     String
  shoe         Shoe[]
}
